/* -------------------------------- 

Primary style

-------------------------------- */
*, *::after, *::before {
    box-sizing: border-box;
  }
  
  html {
    font-size: 62.5%;
  }
  
  body {
    font-size: 1.6rem;
    font-family: sans-serif;
    background-color: #ffffff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  a {
    text-decoration: none;
  }
  
  /* -------------------------------- 
  
  Shared style
  
  -------------------------------- */
  .cd-btn {
    display: inline-block;
    padding: 1.6em 2.4em;
    font-size: 1.4rem;
    letter-spacing: .15em;
    font-weight: 700;
    text-transform: uppercase;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    -webkit-transition: box-shadow .3s;
    transition: box-shadow .3s;
  }
  .cd-btn:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  }
  
  h1 {
    line-height: 1;
  }
  
  /* Main Content */
  .cd-main-content {
    position: relative;
    z-index: 1;
    width: 100%;
    height: 100vh;
    /* vertically align its content */
    display: table;
  }
  .cd-main-content .center {
    /* vertically align inside parent element */
    display: table-cell;
    vertical-align: middle;
    text-align: center;
  }
  
  /* Modal Window */
  .cd-modal {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 3;
    height: 100%;
    width: 100%;
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
    transition: opacity .3s 0s, visibility 0s .3s;
  }
  .cd-modal .modal-content {
    height: 100%;
    overflow-y: auto;
    padding: 3em 5%;
  }
  .cd-modal h1, .cd-modal h2 {
    text-align: center;
  }
  .cd-modal p {
    line-height: 1.6;
    margin: 2em auto;
    max-width: 800px;
  }
  .cd-modal .modal-close {
    /* 'X' icon */
    position: absolute;
    z-index: 1;
    top: 20px;
    right: 5%;
    height: 45px;
    width: 45px;
    border-radius: 50%;
    overflow: hidden;
    white-space: nowrap;
    text-indent: 100%;
    color: transparent;
    visibility: hidden;
    opacity: 0;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transition: visibility 0s .3s, opacity .3s 0s, -webkit-transform .3s 0s;
    transition: visibility 0s .3s, opacity .3s 0s, -webkit-transform .3s 0s;
    transition: transform .3s 0s, visibility 0s .3s, opacity .3s 0s;
    transition: transform .3s 0s, visibility 0s .3s, opacity .3s 0s, -webkit-transform .3s 0s;
  }
  .cd-modal .modal-close::before, .cd-modal .modal-close::after {
    content: '';
    display: inline-block;
    position: absolute;
    height: 2px;
    width: 20px;
    top: calc(50% - 1px);
    left: calc(50% - 10px);
  }
  .cd-modal .modal-close::before {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
  }
  .cd-modal .modal-close::after {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
  }
  .cd-modal.visible {
    opacity: 1;
    visibility: visible;
    -webkit-transition: opacity .7s, visibility 0s;
    transition: opacity .7s, visibility 0s;
  }
  .cd-modal.visible .modal-content {
    /* this fixes the buggy scrolling on webkit browsers - mobile devices only - when overflow property is applied */
    -webkit-overflow-scrolling: touch;
  }
  .cd-modal.visible .modal-close {
    visibility: visible;
    opacity: 1;
    -webkit-transition: visibility 0s 0s, opacity .3s 0s, -webkit-transform .3s 0s;
    transition: visibility 0s 0s, opacity .3s 0s, -webkit-transform .3s 0s;
    transition: transform .3s 0s, visibility 0s 0s, opacity .3s 0s;
    transition: transform .3s 0s, visibility 0s 0s, opacity .3s 0s, -webkit-transform .3s 0s;
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  @media only screen and (min-width: 1100px) {
    .cd-modal .modal-content {
      padding: 6em 5%;
    }
    .cd-modal .modal-close {
      height: 60px;
      width: 60px;
    }
    .cd-modal .modal-close::before, .cd-modal .modal-close::after {
      height: 2px;
      width: 26px;
      top: calc(50% - 1px);
      left: calc(50% - 13px);
    }
    .cd-modal p {
      font-size: 2rem;
    }
  }
  
  /* Transition Layer */
  .cd-transition-layer {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 2;
    height: 100%;
    width: 100%;
    opacity: 0;
    visibility: hidden;
    overflow: hidden;
  }
  .cd-transition-layer .bg-layer {
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translateY(-50%) translateX(-2%);
            transform: translateY(-50%) translateX(-2%);
    /* its dimentions will be overwritten using jQuery to proportionally fit the viewport */
    height: 100%;
    background-size: 100% 100%;
    background-repeat: no-repeat;
    background-position: 0 0;
  }
  .cd-transition-layer.visible {
    opacity: 1;
    visibility: visible;
  }
  .cd-transition-layer.visible .bg-layer {
    -webkit-transform: translateY(-50%) translateX(-98%);
            transform: translateY(-50%) translateX(-98%);
  }
  .cd-transition-layer.opening .bg-layer, .cd-transition-layer.closing .bg-layer {
    -webkit-animation-duration: .8s;
            animation-duration: .8s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
  }
  .no-cssanimations .cd-transition-layer {
    display: none;
  }
  
  /* -------------------------------- 
  
  Glitch Effect
  
  -------------------------------- */
  .glitch-transition {
    font-family: "Work Sans", sans-serif;
    color: #ffffff;
  }
  .glitch-transition h1, .glitch-transition h2 {
    margin-bottom: .4em;
    font-size: 4rem;
    font-weight: 700;
  }
  .glitch-transition .cd-btn {
    background: #676970;
    color: #ffffff;
  }
  .glitch-transition .cd-main-content {
    background: #2e2f36;
  }
  .glitch-transition .cd-modal {
    background: #ffffff;
  }
  .glitch-transition .cd-modal .modal-content {
    color: #676970;
  }
  .glitch-transition .cd-modal .modal-close::before,
  .glitch-transition .cd-modal .modal-close::after {
    background: #ffffff;
  }
  .glitch-transition .cd-modal .modal-close {
    background: #d9d9d9;
  }
  .glitch-transition .cd-modal .modal-close:hover {
    background: #b3b3b3;
  }
  .glitch-transition .cd-transition-layer .bg-layer {
    /* sprite composed of 25 frames */
    width: 2500%;
    background-image: url(glitch.png);
  }
  .glitch-transition .cd-transition-layer.opening .bg-layer {
    -webkit-animation: cd-sequence 0.8s steps(24) forwards;
            animation: cd-sequence 0.8s steps(24) forwards;
  }
  .glitch-transition .cd-transition-layer.closing .bg-layer {
    -webkit-animation: cd-sequence 0.8s steps(24) forwards reverse;
            animation: cd-sequence 0.8s steps(24) forwards reverse;
  }
  @media only screen and (min-width: 768px) {
    .glitch-transition h1 {
      font-size: 8rem;
    }
    .glitch-transition h2 {
      font-size: 6rem;
    }
  }
  
  
  /* -------------------------------- 
  
  Animations
  
  -------------------------------- */
  @-webkit-keyframes cd-sequence {
    0% {
      /* translateX(-2%) is used to horizontally center the first frame inside the viewport */
      -webkit-transform: translateY(-50%) translateX(-2%);
              transform: translateY(-50%) translateX(-2%);
    }
    100% {
      /* translateX(-98%) (2% + 96) is used to horizontally center the last frame inside the viewport  */
      -webkit-transform: translateY(-50%) translateX(-98%);
              transform: translateY(-50%) translateX(-98%);
    }
  }
  @keyframes cd-sequence {
    0% {
      /* translateX(-2%) is used to horizontally center the first frame inside the viewport */
      -webkit-transform: translateY(-50%) translateX(-2%);
              transform: translateY(-50%) translateX(-2%);
    }
    100% {
      /* translateX(-98%) (2% + 96) is used to horizontally center the last frame inside the viewport  */
      -webkit-transform: translateY(-50%) translateX(-98%);
              transform: translateY(-50%) translateX(-98%);
    }
  }
  @-webkit-keyframes cd-sequence-2 {
    0% {
      -webkit-transform: translateY(-50%) translateX(-1.3158%);
              transform: translateY(-50%) translateX(-1.3158%);
    }
    100% {
      -webkit-transform: translateY(-50%) translateX(-98.6842%);
              transform: translateY(-50%) translateX(-98.6842%);
    }
  }
  @keyframes cd-sequence-2 {
    0% {
      -webkit-transform: translateY(-50%) translateX(-1.3158%);
              transform: translateY(-50%) translateX(-1.3158%);
    }
    100% {
      -webkit-transform: translateY(-50%) translateX(-98.6842%);
              transform: translateY(-50%) translateX(-98.6842%);
    }
  }
  @-webkit-keyframes cd-sequence-3 {
    0% {
      -webkit-transform: translateY(-50%) translateX(-2.5%);
              transform: translateY(-50%) translateX(-2.5%);
    }
    100% {
      -webkit-transform: translateY(-50%) translateX(-97.5%);
              transform: translateY(-50%) translateX(-97.5%);
    }
  }
  @keyframes cd-sequence-3 {
    0% {
      -webkit-transform: translateY(-50%) translateX(-2.5%);
              transform: translateY(-50%) translateX(-2.5%);
    }
    100% {
      -webkit-transform: translateY(-50%) translateX(-97.5%);
              transform: translateY(-50%) translateX(-97.5%);
    }
  }
  a{
    font-family: sans-serif;
    font-size: 12px;
    color: grey;
  }

  /* Dropdown Button */
.dropbtn {
  background-color: #3498DB;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

/* Dropdown button on hover & focus */
.dropbtn:hover, .dropbtn:focus {
  background-color: #2980B9;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #ddd}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {display:block;}


 /* Dropdown Button */
 .dropbtn1 {
  background-color: #3498DB;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

/* Dropdown button on hover & focus */
.dropbtn1:hover, .dropbtn1:focus {
  background-color: #2980B9;
}

/* The container <div> - needed to position the dropdown content */
.dropdown1 {
  position: relative;
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content1 {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content1 a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content1 a:hover {background-color: #ddd}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {display:block;}

.icon{
  width: 35px;
  height: 5px;
  background-color: white;
  margin: 6px 0;
}

  
/* The Overlay (background) */
.overlay {
  /* Height & width depends on how you want to reveal the overlay */    
  height: 100%;
  width: 0;
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  background-color: rgb(0,0,0); /* Black fallback color */
  background-color: rgba(0,0,0, 0.9); /* Black w/opacity */
  overflow-x: hidden; /* Disable horizontal scroll */
  transition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */
}

/* Position the content inside the overlay */
.overlay-content {
  position: relative;
  top: 25%; /* 25% from the top */
  width: 100%; /* 100% width */
  text-align: center; /* Centered text/links */
  margin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */
}

/* The navigation links inside the overlay */
.overlay a {
  padding: 8px;
  text-decoration: none;
  font-size: 36px;
  color: #818181;
  display: block; /* Display block instead of inline */
  transition: 0.3s; /* Transition effects on hover (color) */
}

/* When you mouse over the navigation links, change their color */
.overlay a:hover, .overlay a:focus {
  color: #f1f1f1;
}

/* Position the close button (top right corner) */
.overlay .closebtn {
  position: absolute;
  top: 20px;
  right: 45px;
  font-size: 60px;
}

/* When the height of the screen is less than 450 pixels, change the font-size of the links and position the close button again, so they don't overlap */
@media screen and (max-height: 450px) {
  .overlay a {font-size: 20px}
  .overlay .closebtn {
    font-size: 40px;
    top: 15px;
    right: 35px;
  }
}

/**/
#myBtn {
    display: none; /* Hidden by default */
    position: fixed; /* Fixed/sticky position */
    bottom: 20px; /* Place the button at the bottom of the page */
    right: 30px; /* Place the button 30px from the right */
    z-index: 99; /* Make sure it does not overlap */
    border: none; /* Remove borders */
    outline: none; /* Remove outline */
    background-color: red; /* Set a background color */
    color: white; /* Text color */
    cursor: pointer; /* Add a mouse pointer on hover */
    padding: 15px; /* Some padding */
    border-radius: 10px; /* Rounded corners */
    font-size: 18px; /* Increase font size */
  }
  
  #myBtn:hover {
    background-color: #555; /* Add a dark-grey background on hover */
  }
 
